<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="1.90"/>
    <errors>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;void *&apos;." verbose="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;void *&apos;." cwe="686">
            <location file="alloc.c" line="34" column="2"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 2) requires &apos;unsigned int&apos; but the argument type is &apos;void *&apos;." verbose="%x in format string (no. 2) requires &apos;unsigned int&apos; but the argument type is &apos;void *&apos;." cwe="686">
            <location file="alloc.c" line="34" column="2"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;void *&apos;." verbose="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;void *&apos;." cwe="686">
            <location file="alloc.c" line="40" column="2"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;signed long&apos;." cwe="686">
            <location file="alloc.c" line="59" column="2"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;void *&apos;." verbose="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;void *&apos;." cwe="686">
            <location file="alloc.c" line="71" column="4"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;void *&apos;." verbose="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;void *&apos;." cwe="686">
            <location file="alloc.c" line="82" column="3"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;void *&apos;." verbose="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;void *&apos;." cwe="686">
            <location file="alloc.c" line="91" column="2"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;control_block *&apos;." verbose="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;control_block *&apos;." cwe="686">
            <location file="alloc.c" line="152" column="3"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 4) requires &apos;unsigned int&apos; but the argument type is &apos;control_block *&apos;." verbose="%x in format string (no. 4) requires &apos;unsigned int&apos; but the argument type is &apos;control_block *&apos;." cwe="686">
            <location file="alloc.c" line="152" column="3"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 5) requires &apos;unsigned int&apos; but the argument type is &apos;control_block *&apos;." verbose="%x in format string (no. 5) requires &apos;unsigned int&apos; but the argument type is &apos;control_block *&apos;." cwe="686">
            <location file="alloc.c" line="152" column="3"/>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;mem&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;mem&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467">
            <location file="alloc.c" line="43" column="19"/>
            <symbol>mem</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;g_heap_end&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;g_heap_end&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467">
            <location file="alloc.c" line="84" column="14"/>
            <symbol>g_heap_end</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;chunk_to_use&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;chunk_to_use&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467">
            <location file="alloc.c" line="90" column="15"/>
            <symbol>chunk_to_use</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;current_chunk&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;current_chunk&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467">
            <location file="alloc.c" line="123" column="17"/>
            <symbol>current_chunk</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;(void*)cb&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;(void*)cb&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467">
            <location file="alloc.c" line="154" column="39"/>
            <symbol>(void*)cb</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;last_cb&apos; is assigned a value that is never used." verbose="Variable &apos;last_cb&apos; is assigned a value that is never used." cwe="563">
            <location file="alloc.c" line="102" column="10"/>
            <symbol>last_cb</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: tmp" verbose="Unused variable: tmp" cwe="563">
            <location file="alloc.c" line="97" column="23"/>
            <symbol>tmp</symbol>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;signed char *&apos;." verbose="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;signed char *&apos;." cwe="686">
            <location file="malloc_user.c" line="8" column="2"/>
        </error>
    </errors>
</results>
